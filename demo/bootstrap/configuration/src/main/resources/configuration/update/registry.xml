<?xml version="1.0" encoding="UTF-8"?><sv:node xmlns:sv="http://www.jcp.org/jcr/sv/1.0" xmlns:esv="http://www.onehippo.org/jcr/xmlimport" sv:name="hippo:registry" esv:merge="combine">
  <sv:node sv:name="MoveReportsTranslations">
    <sv:property sv:name="jcr:primaryType" sv:type="Name">
      <sv:value>hipposys:updaterinfo</sv:value>
    </sv:property>
    <sv:property sv:name="hipposys:batchsize" sv:type="Long">
      <sv:value>10</sv:value>
    </sv:property>
    <sv:property sv:name="hipposys:description" sv:type="String">
      <sv:value/>
    </sv:property>
    <sv:property sv:name="hipposys:dryrun" sv:type="Boolean">
      <sv:value>false</sv:value>
    </sv:property>
    <sv:property sv:name="hipposys:parameters" sv:type="String">
      <sv:value/>
    </sv:property>
    <sv:property sv:name="hipposys:query" sv:type="String">
      <sv:value>/jcr:root/hippo:configuration/hippo:frontend/cms/hippo-reports//element(*, frontend:plugin)</sv:value>
    </sv:property>
    <sv:property sv:name="hipposys:script" sv:type="String">
      <sv:value>package org.hippoecm.frontend.plugins.cms.admin.updater&#13;
 &#13;
 import org.onehippo.repository.update.BaseNodeUpdateVisitor&#13;
 import javax.jcr.Node&#13;
 import org.apache.commons.lang.StringUtils&#13;
 import org.hippoecm.repository.util.NodeIterable&#13;
 &#13;
 class UpdaterTemplate extends BaseNodeUpdateVisitor {&#13;
 &#13;
 boolean doUpdate(Node node) {&#13;
 if (node.getName().endsWith(".translator")) {&#13;
 final String reportName = StringUtils.substringBefore(node.getName(), ".translator");&#13;
 final Node reportsBundles = node.getSession().getNode("/hippo:configuration/hippo:translations/hippo:reports");&#13;
 final Node reportBundles = getOrCreateReportResourceBundles(reportsBundles, reportName);&#13;
 for (Node translations : new NodeIterable(node.getNode("hippostd:translations").getNodes())) {&#13;
 final String key = translations.getName();&#13;
 for (Node translation : new NodeIterable(translations.getNodes("hippo:translation"))) {&#13;
 final String language = translation.getProperty("hippo:language").getString();&#13;
 final String message = translation.getProperty("hippo:message").getString();&#13;
 final Node reportBundle = getOrCreateResourceBundle(reportBundles, language);&#13;
 reportBundle.setProperty(key, message);&#13;
 log.debug "setting ${key} = ${message} on bundle ${reportBundle.getPath()}"&#13;
 }&#13;
 }&#13;
 node.remove();&#13;
 return true&#13;
 } else {&#13;
 return false&#13;
 }&#13;
 }&#13;
 &#13;
 Node getOrCreateReportResourceBundles(Node reportsTranslations, String reportName) throws RepositoryException {&#13;
 if (reportsTranslations.hasNode(reportName)) {&#13;
 return reportsTranslations.getNode(reportName);&#13;
 } else {&#13;
 return reportsTranslations.addNode(reportName, "hipposys:resourcebundles");&#13;
 }&#13;
 }&#13;
 &#13;
 Node getOrCreateResourceBundle(Node bundles, String language) throws RepositoryException {&#13;
 if (bundles.hasNode(language)) {&#13;
 return bundles.getNode(language);&#13;
 } else {&#13;
 return bundles.addNode(language, "hipposys:resourcebundle");&#13;
 }&#13;
 }&#13;
 &#13;
 boolean undoUpdate(Node node) {&#13;
 throw new UnsupportedOperationException('Updater does not implement undoUpdate method')&#13;
 }&#13;
 &#13;
 }</sv:value>
    </sv:property>
    <sv:property sv:name="hipposys:throttle" sv:type="Long">
      <sv:value>1000</sv:value>
    </sv:property>
  </sv:node>
</sv:node>
